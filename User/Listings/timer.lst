C51 COMPILER V9.54   TIMER                                                                 07/07/2021 17:52:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN ..\Obj\timer.obj
COMPILER INVOKED BY: D:\Program Files\Keil\Keil_v5\C51\BIN\C51.EXE ..\Sys\timer.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Har
                    -dware;..\Peripheral;..\Sys;..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(..\Obj\timer.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          /*************  ¹¦ÄÜËµÃ÷        **************
  15          
  16          ±¾ÎÄ¼þÎªSTC15xxxÏµÁÐµÄ¶¨Ê±Æ÷³õÊ¼»¯ºÍÖÐ¶Ï³ÌÐò,ÓÃ»§¿ÉÒÔÔÚÕâ¸öÎÄ¼þÖÐÐÞ¸Ä×Ô¼ºÐèÒªµÄÖÐ¶Ï³ÌÐò.
  17          
  18          
  19          ******************************************/
  20          
  21          
  22          
  23          #include        "timer.h"
  24          //#include      "SPI.h"
  25          
  26          u8 i;
  27          /********************* Timer0ÖÐ¶Ïº¯Êý************************/
  28          void timer0_int (void) interrupt TIMER0_VECTOR
  29          {
  30   1      //    P30 = ~P30;
  31   1      }
  32          
  33          /********************* Timer1ÖÐ¶Ïº¯Êý************************/
  34          void timer1_int (void) interrupt TIMER1_VECTOR
  35          {
  36   1      //    P31 = ~P31;
  37   1      
  38   1      }
  39          
  40          /********************* Timer2ÖÐ¶Ïº¯Êý************************/
  41          void timer2_int (void) interrupt TIMER2_VECTOR
  42          {
  43   1              P32 = ~P32;
  44   1      }
  45          
  46          /********************* Timer3ÖÐ¶Ïº¯Êý************************/
  47          void timer3_int (void) interrupt TIMER3_VECTOR
  48          {
  49   1              P33 = ~P33;
  50   1      }
  51          
  52          /********************* Timer4ÖÐ¶Ïº¯Êý************************/
  53          void timer4_int (void) interrupt TIMER4_VECTOR
  54          {
C51 COMPILER V9.54   TIMER                                                                 07/07/2021 17:52:03 PAGE 2   

  55   1              static unsigned int cnt;
  56   1              if(++cnt==101)
  57   1              {
  58   2                      cnt=0;
  59   2                      P34 = ~P34;
  60   2              }
  61   1      
  62   1      }
  63          
  64          
  65          //========================================================================
  66          // º¯Êý: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  67          // ÃèÊö: ¶¨Ê±Æ÷³õÊ¼»¯³ÌÐò.
  68          // ²ÎÊý: TIMx: ½á¹¹²ÎÊý,Çë²Î¿¼timer.hÀïµÄ¶¨Òå.
  69          // ·µ»Ø: ³É¹¦·µ»Ø0, ¿Õ²Ù×÷·µ»Ø1,´íÎó·µ»Ø2.
  70          // °æ±¾: V1.0, 2012-10-22
  71          //========================================================================
  72          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  73          {
  74   1              if(TIM > Timer4)        return 1;       //¿Õ²Ù×÷
  75   1      
  76   1              if(TIM == Timer0)
  77   1              {
  78   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //´íÎó
  79   2                      TR0 = 0;                //Í£Ö¹¼ÆÊý
  80   2                      ET0 = 0;        //½ûÖ¹ÖÐ¶Ï
  81   2                      PT0 = 0;        //µÍÓÅÏÈ¼¶ÖÐ¶Ï
  82   2                      TMOD &= 0xf0;   //¶¨Ê±Ä£Ê½, 16Î»×Ô¶¯ÖØ×°
  83   2                      AUXR &= ~0x80;  //12TÄ£Ê½, 
  84   2                      INT_CLKO &= ~0x01;      //²»Êä³öÊ±ÖÓ
  85   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //ÔÊÐíÖÐ¶Ï
  86   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
  87   2                      TMOD |= TIMx->TIM_Mode; //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3: 16Î»×Ô¶¯ÖØ×°, ²
             -»¿ÉÆÁ±ÎÖÐ¶Ï
  88   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  89   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
  90   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //Êä³öÊ±ÖÓ
  91   2                      
  92   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  93   2                      TL0 = (u8)TIMx->TIM_Value;
  94   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //¿ªÊ¼ÔËÐÐ
  95   2                      return  0;              //³É¹¦
  96   2              }
  97   1      
  98   1              if(TIM == Timer1)
  99   1              {
 100   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //´íÎó
 101   2                      TR1 = 0;        //Í£Ö¹¼ÆÊý
 102   2                      ET1 = 0;        //½ûÖ¹ÖÐ¶Ï
 103   2                      PT1 = 0;        //µÍÓÅÏÈ¼¶ÖÐ¶Ï
 104   2                      TMOD &=  0x0f;  //¶¨Ê±Ä£Ê½, 16Î»×Ô¶¯ÖØ×°
 105   2                      AUXR &= ~0x40;  //12TÄ£Ê½, 
 106   2                      INT_CLKO &= ~0x02;      //²»Êä³öÊ±ÖÓ
 107   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //ÔÊÐíÖÐ¶Ï
 108   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
 109   2                      TMOD |= (TIMx->TIM_Mode << 4);  //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°
 110   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
 111   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 112   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //Êä³öÊ±ÖÓ
 113   2                      
 114   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
 115   2                      TL1 = (u8)TIMx->TIM_Value;
C51 COMPILER V9.54   TIMER                                                                 07/07/2021 17:52:03 PAGE 3   

 116   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //¿ªÊ¼ÔËÐÐ
 117   2                      return  0;              //³É¹¦
 118   2              }
 119   1      
 120   1              if(TIM == Timer2)               //Timer2,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
 121   1              {
 122   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
 123   2                      AUXR &= ~0x1c;          //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½
 124   2                      IE2  &= ~(1<<2);        //½ûÖ¹ÖÐ¶Ï
 125   2                      INT_CLKO &= ~0x04;      //²»Êä³öÊ±ÖÓ
 126   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //ÔÊÐíÖÐ¶Ï
 127   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
 128   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 129   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //Êä³öÊ±ÖÓ
 130   2      
 131   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 132   2                      TL2 = (u8)TIMx->TIM_Value;
 133   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //¿ªÊ¼ÔËÐÐ
 134   2                      return  0;              //³É¹¦
 135   2              }
 136   1      
 137   1              if(TIM == Timer3)               //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
 138   1              {
 139   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
 140   2                      T4T3M &= 0xf0;          //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½, ²»Êä³öÊ±ÖÓ
 141   2                      IE2  &= ~(1<<5);        //½ûÖ¹ÖÐ¶Ï
 142   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<5);        //ÔÊÐíÖÐ¶Ï
 143   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         T4T3M |=  (1<<1);       //1T
 144   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        T4T3M |=  (3<<1);       //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 145   2                      if(TIMx->TIM_ClkOut == ENABLE)  T4T3M |=  1;    //Êä³öÊ±ÖÓ
 146   2      
 147   2                      TH3 = (u8)(TIMx->TIM_Value >> 8);
 148   2                      TL3 = (u8)TIMx->TIM_Value;
 149   2                      if(TIMx->TIM_Run == ENABLE)     T4T3M |=  (1<<3);       //¿ªÊ¼ÔËÐÐ
 150   2                      return  0;              //³É¹¦
 151   2              }
 152   1      
 153   1              if(TIM == Timer4)               //Timer4,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
 154   1              {
 155   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
 156   2                      T4T3M &= 0x0f;          //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½, ²»Êä³öÊ±ÖÓ
 157   2                      IE2  &= ~(1<<6);        //½ûÖ¹ÖÐ¶Ï
 158   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<6);        //ÔÊÐíÖÐ¶Ï
 159   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         T4T3M |=  (1<<5);       //1T
 160   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        T4T3M |=  (3<<5);       //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 161   2                      if(TIMx->TIM_ClkOut == ENABLE)  T4T3M |=  (1<<4);       //Êä³öÊ±ÖÓ
 162   2      
 163   2                      TH4 = (u8)(TIMx->TIM_Value >> 8);
 164   2                      TL4 = (u8)TIMx->TIM_Value;
 165   2                      if(TIMx->TIM_Run == ENABLE)     T4T3M |=  (1<<7);       //¿ªÊ¼ÔËÐÐ
 166   2                      return  0;              //³É¹¦
 167   2              }
 168   1      
 169   1              return 2;       //´íÎó
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    590    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   TIMER                                                                 07/07/2021 17:52:03 PAGE 4   

   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
